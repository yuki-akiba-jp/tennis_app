!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
0	templates/.devcontainer/devcontainer.json	/^				"samuelcolvin.jinjahtml"$/;"	s	array:customizations.vscode.extensions
0	templates/.vscode/extensions.json	/^  "recommendations": ["samuelcolvin.jinjahtml"]$/;"	s	array:recommendations
Blueprint	auth.py	/^from flask import Blueprint, flash, redirect, render_template, request, url_for$/;"	i
Blueprint	views.py	/^from flask import Blueprint, redirect, render_template, request, url_for$/;"	i
Flask	__init__.py	/^from flask import Flask$/;"	i
LoginManager	__init__.py	/^from flask_login import LoginManager$/;"	i
Player	models.py	/^class Player(db.Model):$/;"	c
Player	views.py	/^from backend.models import Player, PlayersGroup, User, db$/;"	i
PlayersGroup	models.py	/^class PlayersGroup(db.Model):$/;"	c
PlayersGroup	views.py	/^from backend.models import Player, PlayersGroup, User, db$/;"	i
SQLALCHEMY_DATABASE_URI	config.py	/^SQLALCHEMY_DATABASE_URI = os.environ['DATABASE_URL']$/;"	v
SQLAlchemy	__init__.py	/^from flask_sqlalchemy import SQLAlchemy$/;"	i
User	__init__.py	/^        from backend.models import User$/;"	i
User	auth.py	/^from backend.models import User$/;"	i
User	database.py	/^from backend.models import User$/;"	i
User	models.py	/^class User(UserMixin, db.Model):$/;"	c
User	views.py	/^from backend.models import Player, PlayersGroup, User, db$/;"	i
UserMixin	models.py	/^from flask_login import UserMixin, current_user$/;"	i
__init__	models.py	/^    def __init__(self, group_name, user_id):$/;"	m	class:PlayersGroup
__init__	models.py	/^    def __init__(self, name, gender, belonged_group_id):$/;"	m	class:Player
__init__	models.py	/^    def __init__(self, name, user_id):$/;"	m	class:PlayersGroup
__init__	models.py	/^    def __init__(self, username, hashed_password):$/;"	m	class:User
__tablename__	models.py	/^    __tablename__ = 'player'$/;"	v	class:Player
__tablename__	models.py	/^    __tablename__ = 'player'$/;"	v	class:Player	file:
__tablename__	models.py	/^    __tablename__ = 'players_group'$/;"	v	class:PlayersGroup
__tablename__	models.py	/^    __tablename__ = 'players_group'$/;"	v	class:PlayersGroup	file:
__tablename__	models.py	/^    __tablename__ = 'user'$/;"	v	class:User
__tablename__	models.py	/^    __tablename__ = 'user'$/;"	v	class:User	file:
auth_bp	__init__.py	/^    from backend.auth import auth_bp$/;"	i
auth_bp	auth.py	/^auth_bp = Blueprint('auth', __name__, url_prefix='\/')$/;"	v
belonged_group_id	models.py	/^    belonged_group_id = db.Column(db.Integer)$/;"	v	class:Player
check_password_hash	models.py	/^from werkzeug.security import check_password_hash, generate_password_hash$/;"	i
create_app	__init__.py	/^def create_app():$/;"	f
create_at	models.py	/^    create_at = db.Column(db.DateTime, default=datetime.now)$/;"	v	class:PlayersGroup
create_at	models.py	/^    create_at = db.Column(db.DateTime, default=datetime.now)$/;"	v	class:User
create_group	views.py	/^def create_group():$/;"	f
create_player	views.py	/^def create_player(group_id):$/;"	f
current_user	auth.py	/^from flask_login import current_user, login_required, login_user, logout_user$/;"	i
current_user	models.py	/^from flask_login import UserMixin, current_user$/;"	i
current_user	views.py	/^from flask_login import current_user, login_required$/;"	i
customizations	templates/.devcontainer/devcontainer.json	/^	"customizations": {$/;"	o
datetime	auth.py	/^from datetime import datetime$/;"	i
datetime	models.py	/^from datetime import datetime, timedelta$/;"	i
db	__init__.py	/^db = SQLAlchemy()$/;"	v
db	auth.py	/^from backend import db$/;"	i
db	models.py	/^from backend import db$/;"	i
db	views.py	/^from backend.models import Player, PlayersGroup, User, db$/;"	i
delete_group	views.py	/^def delete_group(group_id):$/;"	f
extensions	templates/.devcontainer/devcontainer.json	/^			"extensions": [$/;"	a	object:customizations.vscode
flash	auth.py	/^from flask import Blueprint, flash, redirect, render_template, request, url_for$/;"	i
gender	models.py	/^    gender = db.Column(db.String)$/;"	v	class:Player
generate_password_hash	__init__.py	/^from werkzeug.security import generate_password_hash$/;"	i
generate_password_hash	auth.py	/^from werkzeug.security import generate_password_hash$/;"	i
generate_password_hash	database.py	/^from werkzeug.security import generate_password_hash$/;"	i
generate_password_hash	models.py	/^from werkzeug.security import check_password_hash, generate_password_hash$/;"	i
get_groups	views.py	/^def get_groups(current_user):$/;"	f
get_id	models.py	/^    def get_id(self):$/;"	m	class:User
h1	static/css/style.css	/^h1 {$/;"	s
hashed_password	models.py	/^    hashed_password = db.Column(db.String(256))$/;"	v	class:User
home	views.py	/^def home():$/;"	f
id	models.py	/^    id = db.Column(db.Integer, primary_key=True)$/;"	v	class:Player
id	models.py	/^    id = db.Column(db.Integer, primary_key=True)$/;"	v	class:PlayersGroup
id	models.py	/^    id = db.Column(db.Integer, primary_key=True)$/;"	v	class:User
image	templates/.devcontainer/devcontainer.json	/^	"image": "mcr.microsoft.com\/devcontainers\/base:alpine-3.16",$/;"	s
inclement_play_times	models.py	/^    def inclement_play_times(self):$/;"	m	class:Player
init_db	__init__.py	/^    from backend.database import init_db$/;"	i
init_db	database.py	/^def init_db(db):$/;"	f
load_user	views.py	/^def load_user(user_id):$/;"	f
login	auth.py	/^def login():$/;"	f
login_manager	__init__.py	/^login_manager = LoginManager()$/;"	v
login_manager	views.py	/^from backend import login_manager$/;"	i
login_required	auth.py	/^from flask_login import current_user, login_required, login_user, logout_user$/;"	i
login_required	views.py	/^from flask_login import current_user, login_required$/;"	i
login_user	auth.py	/^from flask_login import current_user, login_required, login_user, logout_user$/;"	i
logout	auth.py	/^def logout():$/;"	f
logout_user	auth.py	/^from flask_login import current_user, login_required, login_user, logout_user$/;"	i
name	models.py	/^    name = db.Column(db.String)$/;"	v	class:Player
name	models.py	/^    name = db.Column(db.String)$/;"	v	class:PlayersGroup
name	templates/.devcontainer/devcontainer.json	/^	"name": "Alpine",$/;"	s
os	__init__.py	/^import os$/;"	i
play_times	models.py	/^    play_times = db.Column(db.Integer)$/;"	v	class:Player
recommendations	templates/.vscode/extensions.json	/^  "recommendations": ["samuelcolvin.jinjahtml"]$/;"	a
redirect	auth.py	/^from flask import Blueprint, flash, redirect, render_template, request, url_for$/;"	i
redirect	views.py	/^from flask import Blueprint, redirect, render_template, request, url_for$/;"	i
register	auth.py	/^def register():$/;"	f
render_template	auth.py	/^from flask import Blueprint, flash, redirect, render_template, request, url_for$/;"	i
render_template	views.py	/^from flask import Blueprint, redirect, render_template, request, url_for$/;"	i
reportGeneralTypeIssues	pyrightconfig.json	/^  "reportGeneralTypeIssues": "none",$/;"	s
reportOptionalSubscript	pyrightconfig.json	/^  "reportOptionalSubscript": "none"$/;"	s
request	auth.py	/^from flask import Blueprint, flash, redirect, render_template, request, url_for$/;"	i
request	views.py	/^from flask import Blueprint, redirect, render_template, request, url_for$/;"	i
show_group	views.py	/^def show_group(group_id):$/;"	f
timedelta	models.py	/^from datetime import datetime, timedelta$/;"	i
update_at	models.py	/^    update_at = db.Column(db.DateTime, default=datetime.now)$/;"	v	class:PlayersGroup
update_at	models.py	/^    update_at = db.Column(db.DateTime, default=datetime.now)$/;"	v	class:User
update_group	views.py	/^def update_group(group_id):$/;"	f
update_player	views.py	/^def update_player(player_id):$/;"	f
url_for	auth.py	/^from flask import Blueprint, flash, redirect, render_template, request, url_for$/;"	i
url_for	views.py	/^from flask import Blueprint, redirect, render_template, request, url_for$/;"	i
user_id	models.py	/^    user_id = db.Column(db.Integer, db.ForeignKey('user.id'), nullable=False)$/;"	v	class:PlayersGroup
user_update	auth.py	/^def user_update():$/;"	f
username	models.py	/^    username = db.Column(db.String)$/;"	v	class:User
uuid4	models.py	/^from uuid import uuid4$/;"	i
validate_password	models.py	/^    def validate_password(self, password):$/;"	m	class:User
view_bp	__init__.py	/^    from backend.views import view_bp$/;"	i
view_bp	views.py	/^view_bp = Blueprint('views', __name__, url_prefix='\/')$/;"	v
vscode	templates/.devcontainer/devcontainer.json	/^		"vscode": {$/;"	o	object:customizations
